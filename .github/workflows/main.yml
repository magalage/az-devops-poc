# This action workflow is based on Azure DevOps Pipeline YAML

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the azure-pipelines branch
on:
  push:
    branches: [ azure-pipelines ]
  pull_request:
    branches: [ azure-pipelines ]

env:
  Parameters.RestoreBuildProjects: '**/*.csproj'
  Parameters.UnitTestProjects: 'aspnet-core-dotnet-core.UnitTests'
  BuildConfiguration: Release
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: Application

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Restore
        run: dotnet restore ${{ env.Parameters.RestoreBuildProjects }}
      
      - name: Build
        run: dotnet build ${{ env.Parameters.RestoreBuildProjects }} --configuration ${{ env.BuildConfiguration }}
      
      # Had to provide the Unittest project folder to run only unit tests in this step. It does not take global patterns like in Azure DevOps pipeline
      - name: Test
        run: dotnet test ./aspnet-core-dotnet-core.UnitTests --configuration ${{ env.BuildConfiguration }}
      
      - name: Publish
        run: dotnet publish --configuration ${{ env.BuildConfiguration }} --output "./drop"

      - name: Publish functional tests
        run: dotnet publish **/*FunctionalTest*.csproj --configuration ${{ env.BuildConfiguration }} --output "./drop/FunctionalTests"
      
      - name: Copy runsettings file
        run: cp ./aspnet-core-dotnet-core.FunctionalTests/functionalTests.runsettings ./drop/FunctionalTests

      - name: Copy runsettings file
        run: cp ./aspnet-core-dotnet-core.FunctionalTests/functionalTests.runsettings ./drop/FunctionalTests

      - name: Copy ARM templates
        run: cp -r ../ArmTemplates/ ./drop

      - name: ls
        run: ls ./drop/
        
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          name: az-devops-poc-build-drop
          path: ./drop/*


