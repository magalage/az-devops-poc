# This action workflow is based on Azure DevOps Pipeline YAML
# It's required to implement proper github workflow to prompt build/test results for the reviewer when do a PR

name: CI

on:
  push: 
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Unlike Azure DevOps pipeline YAML, dotnet cli commands used here in Actions does not take global patters like ('**/*.csproj') 
  # Added following path variables instead
  ProjectsFolder: './Application'
  UnitTestProjects: './Application/aspnet-core-dotnet-core.UnitTests'
  FunctionalTestProjects: './Application/aspnet-core-dotnet-core.FunctionalTests'
  BuildConfiguration: Release
  PublishFolder: './Application/drop'
  FunctionalTestsPublishFolder: './Application/drop/FunctionalTests'
  
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: SonarCloud Scan
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@f4c6e4d91ea9785ec823eaeed459042606123402
        uses: SonarSource/sonarcloud-github-action@v1.4
        with:
          # Additional arguments to the sonarcloud scanner
          #args: # optional
          # Set the sonar.projectBaseDir analysis property
          projectBaseDir: ${{ env.ProjectsFolder }} # optional, default is .

      - name: Restore
        run: dotnet restore ${{ env.ProjectsFolder }}
      
      - name: Build
        run: dotnet build ${{ env.ProjectsFolder }} --configuration ${{ env.BuildConfiguration }}
      
      - name: Test
        run: dotnet test ${{ env.UnitTestProjects }} --configuration ${{ env.BuildConfiguration }}
      
      - name: Publish
        run: dotnet publish ${{ env.ProjectsFolder }} --configuration ${{ env.BuildConfiguration }} --output ${{ env.PublishFolder }}

      - name: Publish functional tests
        run: dotnet publish ${{ env.FunctionalTestProjects }} --configuration ${{ env.BuildConfiguration }} --output ${{ env.FunctionalTestsPublishFolder }}
      
      - name: Copy runsettings file
        run: cp ${{ env.FunctionalTestProjects }}/functionalTests.runsettings ${{ env.FunctionalTestsPublishFolder }}

      - name: Copy ARM templates
        run: cp -r ./ArmTemplates/ ${{ env.PublishFolder }}

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: az-devops-poc-build-drop
          path: ${{ env.PublishFolder }}

